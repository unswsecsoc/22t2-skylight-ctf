
vuln:     file format elf32-i386


Disassembly of section .interp:

08048194 <.interp>:
 8048194:	2f                   	das    
 8048195:	6c                   	ins    BYTE PTR es:[edi],dx
 8048196:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804819d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 80481a4:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.gnu.build-id:

080481a8 <.note.gnu.build-id>:
 80481a8:	04 00                	add    al,0x0
 80481aa:	00 00                	add    BYTE PTR [eax],al
 80481ac:	14 00                	adc    al,0x0
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	03 00                	add    eax,DWORD PTR [eax]
 80481b2:	00 00                	add    BYTE PTR [eax],al
 80481b4:	47                   	inc    edi
 80481b5:	4e                   	dec    esi
 80481b6:	55                   	push   ebp
 80481b7:	00 22                	add    BYTE PTR [edx],ah
 80481b9:	5d                   	pop    ebp
 80481ba:	5e                   	pop    esi
 80481bb:	02 bb a5 6e 8d 07    	add    bh,BYTE PTR [ebx+0x78d6ea5]
 80481c1:	56                   	push   esi
 80481c2:	30 bc 1a 69 2e b2 72 	xor    BYTE PTR [edx+ebx*1+0x72b22e69],bh
 80481c9:	f4                   	hlt    
 80481ca:	8f                   	.byte 0x8f
 80481cb:	ea                   	.byte 0xea

Disassembly of section .note.ABI-tag:

080481cc <__abi_tag>:
 80481cc:	04 00                	add    al,0x0
 80481ce:	00 00                	add    BYTE PTR [eax],al
 80481d0:	10 00                	adc    BYTE PTR [eax],al
 80481d2:	00 00                	add    BYTE PTR [eax],al
 80481d4:	01 00                	add    DWORD PTR [eax],eax
 80481d6:	00 00                	add    BYTE PTR [eax],al
 80481d8:	47                   	inc    edi
 80481d9:	4e                   	dec    esi
 80481da:	55                   	push   ebp
 80481db:	00 00                	add    BYTE PTR [eax],al
 80481dd:	00 00                	add    BYTE PTR [eax],al
 80481df:	00 03                	add    BYTE PTR [ebx],al
 80481e1:	00 00                	add    BYTE PTR [eax],al
 80481e3:	00 02                	add    BYTE PTR [edx],al
 80481e5:	00 00                	add    BYTE PTR [eax],al
 80481e7:	00 00                	add    BYTE PTR [eax],al
 80481e9:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .gnu.hash:

080481ec <.gnu.hash>:
 80481ec:	02 00                	add    al,BYTE PTR [eax]
 80481ee:	00 00                	add    BYTE PTR [eax],al
 80481f0:	0b 00                	or     eax,DWORD PTR [eax]
 80481f2:	00 00                	add    BYTE PTR [eax],al
 80481f4:	01 00                	add    DWORD PTR [eax],eax
 80481f6:	00 00                	add    BYTE PTR [eax],al
 80481f8:	05 00 00 00 00       	add    eax,0x0
 80481fd:	20 00                	and    BYTE PTR [eax],al
 80481ff:	20 00                	and    BYTE PTR [eax],al
 8048201:	00 00                	add    BYTE PTR [eax],al
 8048203:	00 0b                	add    BYTE PTR [ebx],cl
 8048205:	00 00                	add    BYTE PTR [eax],al
 8048207:	00                   	.byte 0x0
 8048208:	ad                   	lods   eax,DWORD PTR ds:[esi]
 8048209:	4b                   	dec    ebx
 804820a:	e3 c0                	jecxz  80481cc <__abi_tag>

Disassembly of section .dynsym:

0804820c <.dynsym>:
	...
 804821c:	3c 00                	cmp    al,0x0
	...
 8048226:	00 00                	add    BYTE PTR [eax],al
 8048228:	12 00                	adc    al,BYTE PTR [eax]
 804822a:	00 00                	add    BYTE PTR [eax],al
 804822c:	20 00                	and    BYTE PTR [eax],al
	...
 8048236:	00 00                	add    BYTE PTR [eax],al
 8048238:	12 00                	adc    al,BYTE PTR [eax]
 804823a:	00 00                	add    BYTE PTR [eax],al
 804823c:	10 00                	adc    BYTE PTR [eax],al
	...
 8048246:	00 00                	add    BYTE PTR [eax],al
 8048248:	12 00                	adc    al,BYTE PTR [eax]
 804824a:	00 00                	add    BYTE PTR [eax],al
 804824c:	2e 00 00             	add    BYTE PTR cs:[eax],al
	...
 8048257:	00 11                	add    BYTE PTR [ecx],dl
 8048259:	00 00                	add    BYTE PTR [eax],al
 804825b:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8048261:	00 00                	add    BYTE PTR [eax],al
 8048263:	00 00                	add    BYTE PTR [eax],al
 8048265:	00 00                	add    BYTE PTR [eax],al
 8048267:	00 12                	add    BYTE PTR [edx],dl
 8048269:	00 00                	add    BYTE PTR [eax],al
 804826b:	00 35 00 00 00 00    	add    BYTE PTR ds:0x0,dh
 8048271:	00 00                	add    BYTE PTR [eax],al
 8048273:	00 00                	add    BYTE PTR [eax],al
 8048275:	00 00                	add    BYTE PTR [eax],al
 8048277:	00 12                	add    BYTE PTR [edx],dl
 8048279:	00 00                	add    BYTE PTR [eax],al
 804827b:	00 69 00             	add    BYTE PTR [ecx+0x0],ch
	...
 8048286:	00 00                	add    BYTE PTR [eax],al
 8048288:	20 00                	and    BYTE PTR [eax],al
 804828a:	00 00                	add    BYTE PTR [eax],al
 804828c:	43                   	inc    ebx
	...
 8048295:	00 00                	add    BYTE PTR [eax],al
 8048297:	00 12                	add    BYTE PTR [edx],dl
 8048299:	00 00                	add    BYTE PTR [eax],al
 804829b:	00 1a                	add    BYTE PTR [edx],bl
	...
 80482a5:	00 00                	add    BYTE PTR [eax],al
 80482a7:	00 11                	add    BYTE PTR [ecx],dl
 80482a9:	00 00                	add    BYTE PTR [eax],al
 80482ab:	00 27                	add    BYTE PTR [edi],ah
	...
 80482b5:	00 00                	add    BYTE PTR [eax],al
 80482b7:	00 11                	add    BYTE PTR [ecx],dl
 80482b9:	00 00                	add    BYTE PTR [eax],al
 80482bb:	00 01                	add    BYTE PTR [ecx],al
 80482bd:	00 00                	add    BYTE PTR [eax],al
 80482bf:	00 04 a0             	add    BYTE PTR [eax+eiz*4],al
 80482c2:	04 08                	add    al,0x8
 80482c4:	04 00                	add    al,0x0
 80482c6:	00 00                	add    BYTE PTR [eax],al
 80482c8:	11 00                	adc    DWORD PTR [eax],eax
 80482ca:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

080482cc <.dynstr>:
 80482cc:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 80482cf:	4f                   	dec    edi
 80482d0:	5f                   	pop    edi
 80482d1:	73 74                	jae    8048347 <__abi_tag+0x17b>
 80482d3:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 80482da:	64 
 80482db:	00 67 65             	add    BYTE PTR [edi+0x65],ah
 80482de:	74 73                	je     8048353 <__abi_tag+0x187>
 80482e0:	00 70 75             	add    BYTE PTR [eax+0x75],dh
 80482e3:	74 73                	je     8048358 <__abi_tag+0x18c>
 80482e5:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 80482e8:	64 69 6e 00 70 72 69 	imul   ebp,DWORD PTR fs:[esi+0x0],0x6e697270
 80482ef:	6e 
 80482f0:	74 66                	je     8048358 <__abi_tag+0x18c>
 80482f2:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 80482f5:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 80482f7:	75 74                	jne    804836d <__abi_tag+0x1a1>
 80482f9:	00 73 74             	add    BYTE PTR [ebx+0x74],dh
 80482fc:	64 65 72 72          	fs gs jb 8048372 <__abi_tag+0x1a6>
 8048300:	00 73 79             	add    BYTE PTR [ebx+0x79],dh
 8048303:	73 74                	jae    8048379 <__abi_tag+0x1ad>
 8048305:	65 6d                	gs ins DWORD PTR es:[edi],dx
 8048307:	00 73 65             	add    BYTE PTR [ebx+0x65],dh
 804830a:	74 62                	je     804836e <__abi_tag+0x1a2>
 804830c:	75 66                	jne    8048374 <__abi_tag+0x1a8>
 804830e:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048311:	6c                   	ins    BYTE PTR es:[edi],dx
 8048312:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 8048319:	72 74                	jb     804838f <__abi_tag+0x1c3>
 804831b:	5f                   	pop    edi
 804831c:	6d                   	ins    DWORD PTR es:[edi],dx
 804831d:	61                   	popa   
 804831e:	69 6e 00 6c 69 62 63 	imul   ebp,DWORD PTR [esi+0x0],0x6362696c
 8048325:	2e 73 6f             	cs jae 8048397 <__abi_tag+0x1cb>
 8048328:	2e 36 00 47 4c       	cs add BYTE PTR ss:[edi+0x4c],al
 804832d:	49                   	dec    ecx
 804832e:	42                   	inc    edx
 804832f:	43                   	inc    ebx
 8048330:	5f                   	pop    edi
 8048331:	32 2e                	xor    ch,BYTE PTR [esi]
 8048333:	30 00                	xor    BYTE PTR [eax],al
 8048335:	5f                   	pop    edi
 8048336:	5f                   	pop    edi
 8048337:	67 6d                	ins    DWORD PTR es:[di],dx
 8048339:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804833a:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804833b:	5f                   	pop    edi
 804833c:	73 74                	jae    80483b2 <__abi_tag+0x1e6>
 804833e:	61                   	popa   
 804833f:	72 74                	jb     80483b5 <__abi_tag+0x1e9>
 8048341:	5f                   	pop    edi
 8048342:	5f                   	pop    edi
	...

Disassembly of section .gnu.version:

08048344 <.gnu.version>:
 8048344:	00 00                	add    BYTE PTR [eax],al
 8048346:	02 00                	add    al,BYTE PTR [eax]
 8048348:	02 00                	add    al,BYTE PTR [eax]
 804834a:	02 00                	add    al,BYTE PTR [eax]
 804834c:	02 00                	add    al,BYTE PTR [eax]
 804834e:	02 00                	add    al,BYTE PTR [eax]
 8048350:	02 00                	add    al,BYTE PTR [eax]
 8048352:	01 00                	add    DWORD PTR [eax],eax
 8048354:	02 00                	add    al,BYTE PTR [eax]
 8048356:	02 00                	add    al,BYTE PTR [eax]
 8048358:	02 00                	add    al,BYTE PTR [eax]
 804835a:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

0804835c <.gnu.version_r>:
 804835c:	01 00                	add    DWORD PTR [eax],eax
 804835e:	01 00                	add    DWORD PTR [eax],eax
 8048360:	55                   	push   ebp
 8048361:	00 00                	add    BYTE PTR [eax],al
 8048363:	00 10                	add    BYTE PTR [eax],dl
 8048365:	00 00                	add    BYTE PTR [eax],al
 8048367:	00 00                	add    BYTE PTR [eax],al
 8048369:	00 00                	add    BYTE PTR [eax],al
 804836b:	00 10                	add    BYTE PTR [eax],dl
 804836d:	69 69 0d 00 00 02 00 	imul   ebp,DWORD PTR [ecx+0xd],0x20000
 8048374:	5f                   	pop    edi
 8048375:	00 00                	add    BYTE PTR [eax],al
 8048377:	00 00                	add    BYTE PTR [eax],al
 8048379:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

0804837c <.rel.dyn>:
 804837c:	f0 bf 04 08 06 04    	lock mov edi,0x4060804
 8048382:	00 00                	add    BYTE PTR [eax],al
 8048384:	f4                   	hlt    
 8048385:	bf 04 08 06 07       	mov    edi,0x7060804
 804838a:	00 00                	add    BYTE PTR [eax],al
 804838c:	f8                   	clc    
 804838d:	bf 04 08 06 09       	mov    edi,0x9060804
 8048392:	00 00                	add    BYTE PTR [eax],al
 8048394:	fc                   	cld    
 8048395:	bf 04 08 06 0a       	mov    edi,0xa060804
	...

Disassembly of section .rel.plt:

0804839c <.rel.plt>:
 804839c:	0c c0                	or     al,0xc0
 804839e:	04 08                	add    al,0x8
 80483a0:	07                   	pop    es
 80483a1:	01 00                	add    DWORD PTR [eax],eax
 80483a3:	00 10                	add    BYTE PTR [eax],dl
 80483a5:	c0 04 08 07          	rol    BYTE PTR [eax+ecx*1],0x7
 80483a9:	02 00                	add    al,BYTE PTR [eax]
 80483ab:	00 14 c0             	add    BYTE PTR [eax+eax*8],dl
 80483ae:	04 08                	add    al,0x8
 80483b0:	07                   	pop    es
 80483b1:	03 00                	add    eax,DWORD PTR [eax]
 80483b3:	00 18                	add    BYTE PTR [eax],bl
 80483b5:	c0 04 08 07          	rol    BYTE PTR [eax+ecx*1],0x7
 80483b9:	05 00 00 1c c0       	add    eax,0xc01c0000
 80483be:	04 08                	add    al,0x8
 80483c0:	07                   	pop    es
 80483c1:	06                   	push   es
 80483c2:	00 00                	add    BYTE PTR [eax],al
 80483c4:	20 c0                	and    al,al
 80483c6:	04 08                	add    al,0x8
 80483c8:	07                   	pop    es
 80483c9:	08 00                	or     BYTE PTR [eax],al
	...

Disassembly of section .init:

08049000 <_init>:
 8049000:	53                   	push   ebx
 8049001:	83 ec 08             	sub    esp,0x8
 8049004:	e8 d7 00 00 00       	call   80490e0 <__x86.get_pc_thunk.bx>
 8049009:	81 c3 f7 2f 00 00    	add    ebx,0x2ff7
 804900f:	8b 83 f4 ff ff ff    	mov    eax,DWORD PTR [ebx-0xc]
 8049015:	85 c0                	test   eax,eax
 8049017:	74 02                	je     804901b <_init+0x1b>
 8049019:	ff d0                	call   eax
 804901b:	83 c4 08             	add    esp,0x8
 804901e:	5b                   	pop    ebx
 804901f:	c3                   	ret    

Disassembly of section .plt:

08049020 <setbuf@plt-0x10>:
 8049020:	ff 35 04 c0 04 08    	push   DWORD PTR ds:0x804c004
 8049026:	ff 25 08 c0 04 08    	jmp    DWORD PTR ds:0x804c008
 804902c:	00 00                	add    BYTE PTR [eax],al
	...

08049030 <setbuf@plt>:
 8049030:	ff 25 0c c0 04 08    	jmp    DWORD PTR ds:0x804c00c
 8049036:	68 00 00 00 00       	push   0x0
 804903b:	e9 e0 ff ff ff       	jmp    8049020 <_init+0x20>

08049040 <printf@plt>:
 8049040:	ff 25 10 c0 04 08    	jmp    DWORD PTR ds:0x804c010
 8049046:	68 08 00 00 00       	push   0x8
 804904b:	e9 d0 ff ff ff       	jmp    8049020 <_init+0x20>

08049050 <gets@plt>:
 8049050:	ff 25 14 c0 04 08    	jmp    DWORD PTR ds:0x804c014
 8049056:	68 10 00 00 00       	push   0x10
 804905b:	e9 c0 ff ff ff       	jmp    8049020 <_init+0x20>

08049060 <puts@plt>:
 8049060:	ff 25 18 c0 04 08    	jmp    DWORD PTR ds:0x804c018
 8049066:	68 18 00 00 00       	push   0x18
 804906b:	e9 b0 ff ff ff       	jmp    8049020 <_init+0x20>

08049070 <system@plt>:
 8049070:	ff 25 1c c0 04 08    	jmp    DWORD PTR ds:0x804c01c
 8049076:	68 20 00 00 00       	push   0x20
 804907b:	e9 a0 ff ff ff       	jmp    8049020 <_init+0x20>

08049080 <__libc_start_main@plt>:
 8049080:	ff 25 20 c0 04 08    	jmp    DWORD PTR ds:0x804c020
 8049086:	68 28 00 00 00       	push   0x28
 804908b:	e9 90 ff ff ff       	jmp    8049020 <_init+0x20>

Disassembly of section .text:

08049090 <_start>:
 8049090:	31 ed                	xor    ebp,ebp
 8049092:	5e                   	pop    esi
 8049093:	89 e1                	mov    ecx,esp
 8049095:	83 e4 f0             	and    esp,0xfffffff0
 8049098:	50                   	push   eax
 8049099:	54                   	push   esp
 804909a:	52                   	push   edx
 804909b:	e8 23 00 00 00       	call   80490c3 <_start+0x33>
 80490a0:	81 c3 60 2f 00 00    	add    ebx,0x2f60
 80490a6:	8d 83 00 d3 ff ff    	lea    eax,[ebx-0x2d00]
 80490ac:	50                   	push   eax
 80490ad:	8d 83 a0 d2 ff ff    	lea    eax,[ebx-0x2d60]
 80490b3:	50                   	push   eax
 80490b4:	51                   	push   ecx
 80490b5:	56                   	push   esi
 80490b6:	c7 c0 20 92 04 08    	mov    eax,0x8049220
 80490bc:	50                   	push   eax
 80490bd:	e8 be ff ff ff       	call   8049080 <__libc_start_main@plt>
 80490c2:	f4                   	hlt    
 80490c3:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490c6:	c3                   	ret    
 80490c7:	66 90                	xchg   ax,ax
 80490c9:	66 90                	xchg   ax,ax
 80490cb:	66 90                	xchg   ax,ax
 80490cd:	66 90                	xchg   ax,ax
 80490cf:	90                   	nop

080490d0 <_dl_relocate_static_pie>:
 80490d0:	c3                   	ret    
 80490d1:	66 90                	xchg   ax,ax
 80490d3:	66 90                	xchg   ax,ax
 80490d5:	66 90                	xchg   ax,ax
 80490d7:	66 90                	xchg   ax,ax
 80490d9:	66 90                	xchg   ax,ax
 80490db:	66 90                	xchg   ax,ax
 80490dd:	66 90                	xchg   ax,ax
 80490df:	90                   	nop

080490e0 <__x86.get_pc_thunk.bx>:
 80490e0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 80490e3:	c3                   	ret    
 80490e4:	66 90                	xchg   ax,ax
 80490e6:	66 90                	xchg   ax,ax
 80490e8:	66 90                	xchg   ax,ax
 80490ea:	66 90                	xchg   ax,ax
 80490ec:	66 90                	xchg   ax,ax
 80490ee:	66 90                	xchg   ax,ax

080490f0 <deregister_tm_clones>:
 80490f0:	b8 2c c0 04 08       	mov    eax,0x804c02c
 80490f5:	3d 2c c0 04 08       	cmp    eax,0x804c02c
 80490fa:	74 24                	je     8049120 <deregister_tm_clones+0x30>
 80490fc:	b8 00 00 00 00       	mov    eax,0x0
 8049101:	85 c0                	test   eax,eax
 8049103:	74 1b                	je     8049120 <deregister_tm_clones+0x30>
 8049105:	55                   	push   ebp
 8049106:	89 e5                	mov    ebp,esp
 8049108:	83 ec 14             	sub    esp,0x14
 804910b:	68 2c c0 04 08       	push   0x804c02c
 8049110:	ff d0                	call   eax
 8049112:	83 c4 10             	add    esp,0x10
 8049115:	c9                   	leave  
 8049116:	c3                   	ret    
 8049117:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804911e:	66 90                	xchg   ax,ax
 8049120:	c3                   	ret    
 8049121:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8049128:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 804912f:	90                   	nop

08049130 <register_tm_clones>:
 8049130:	b8 2c c0 04 08       	mov    eax,0x804c02c
 8049135:	2d 2c c0 04 08       	sub    eax,0x804c02c
 804913a:	89 c2                	mov    edx,eax
 804913c:	c1 e8 1f             	shr    eax,0x1f
 804913f:	c1 fa 02             	sar    edx,0x2
 8049142:	01 d0                	add    eax,edx
 8049144:	d1 f8                	sar    eax,1
 8049146:	74 20                	je     8049168 <register_tm_clones+0x38>
 8049148:	ba 00 00 00 00       	mov    edx,0x0
 804914d:	85 d2                	test   edx,edx
 804914f:	74 17                	je     8049168 <register_tm_clones+0x38>
 8049151:	55                   	push   ebp
 8049152:	89 e5                	mov    ebp,esp
 8049154:	83 ec 10             	sub    esp,0x10
 8049157:	50                   	push   eax
 8049158:	68 2c c0 04 08       	push   0x804c02c
 804915d:	ff d2                	call   edx
 804915f:	83 c4 10             	add    esp,0x10
 8049162:	c9                   	leave  
 8049163:	c3                   	ret    
 8049164:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
 8049168:	c3                   	ret    
 8049169:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08049170 <__do_global_dtors_aux>:
 8049170:	f3 0f 1e fb          	endbr32 
 8049174:	80 3d 2c c0 04 08 00 	cmp    BYTE PTR ds:0x804c02c,0x0
 804917b:	75 1b                	jne    8049198 <__do_global_dtors_aux+0x28>
 804917d:	55                   	push   ebp
 804917e:	89 e5                	mov    ebp,esp
 8049180:	83 ec 08             	sub    esp,0x8
 8049183:	e8 68 ff ff ff       	call   80490f0 <deregister_tm_clones>
 8049188:	c6 05 2c c0 04 08 01 	mov    BYTE PTR ds:0x804c02c,0x1
 804918f:	c9                   	leave  
 8049190:	c3                   	ret    
 8049191:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
 8049198:	c3                   	ret    
 8049199:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

080491a0 <frame_dummy>:
 80491a0:	f3 0f 1e fb          	endbr32 
 80491a4:	eb 8a                	jmp    8049130 <register_tm_clones>

080491a6 <win>:
 80491a6:	55                   	push   ebp
 80491a7:	89 e5                	mov    ebp,esp
 80491a9:	53                   	push   ebx
 80491aa:	83 ec 04             	sub    esp,0x4
 80491ad:	e8 de 00 00 00       	call   8049290 <__x86.get_pc_thunk.ax>
 80491b2:	05 4e 2e 00 00       	add    eax,0x2e4e
 80491b7:	83 ec 0c             	sub    esp,0xc
 80491ba:	8d 90 08 e0 ff ff    	lea    edx,[eax-0x1ff8]
 80491c0:	52                   	push   edx
 80491c1:	89 c3                	mov    ebx,eax
 80491c3:	e8 a8 fe ff ff       	call   8049070 <system@plt>
 80491c8:	83 c4 10             	add    esp,0x10
 80491cb:	90                   	nop
 80491cc:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 80491cf:	c9                   	leave  
 80491d0:	c3                   	ret    

080491d1 <vuln>:
 80491d1:	55                   	push   ebp
 80491d2:	89 e5                	mov    ebp,esp
 80491d4:	53                   	push   ebx
 80491d5:	83 ec 44             	sub    esp,0x44
 80491d8:	e8 03 ff ff ff       	call   80490e0 <__x86.get_pc_thunk.bx>
 80491dd:	81 c3 23 2e 00 00    	add    ebx,0x2e23
 80491e3:	83 ec 0c             	sub    esp,0xc
 80491e6:	8d 83 10 e0 ff ff    	lea    eax,[ebx-0x1ff0]
 80491ec:	50                   	push   eax
 80491ed:	e8 6e fe ff ff       	call   8049060 <puts@plt>
 80491f2:	83 c4 10             	add    esp,0x10
 80491f5:	83 ec 0c             	sub    esp,0xc
 80491f8:	8d 45 b8             	lea    eax,[ebp-0x48]
 80491fb:	50                   	push   eax
 80491fc:	e8 4f fe ff ff       	call   8049050 <gets@plt>
 8049201:	83 c4 10             	add    esp,0x10
 8049204:	83 ec 08             	sub    esp,0x8
 8049207:	8d 45 b8             	lea    eax,[ebp-0x48]
 804920a:	50                   	push   eax
 804920b:	8d 83 27 e0 ff ff    	lea    eax,[ebx-0x1fd9]
 8049211:	50                   	push   eax
 8049212:	e8 29 fe ff ff       	call   8049040 <printf@plt>
 8049217:	83 c4 10             	add    esp,0x10
 804921a:	90                   	nop
 804921b:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
 804921e:	c9                   	leave  
 804921f:	c3                   	ret    

08049220 <main>:
 8049220:	8d 4c 24 04          	lea    ecx,[esp+0x4]
 8049224:	83 e4 f0             	and    esp,0xfffffff0
 8049227:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
 804922a:	55                   	push   ebp
 804922b:	89 e5                	mov    ebp,esp
 804922d:	53                   	push   ebx
 804922e:	51                   	push   ecx
 804922f:	e8 ac fe ff ff       	call   80490e0 <__x86.get_pc_thunk.bx>
 8049234:	81 c3 cc 2d 00 00    	add    ebx,0x2dcc
 804923a:	8b 83 f8 ff ff ff    	mov    eax,DWORD PTR [ebx-0x8]
 8049240:	8b 00                	mov    eax,DWORD PTR [eax]
 8049242:	83 ec 08             	sub    esp,0x8
 8049245:	6a 00                	push   0x0
 8049247:	50                   	push   eax
 8049248:	e8 e3 fd ff ff       	call   8049030 <setbuf@plt>
 804924d:	83 c4 10             	add    esp,0x10
 8049250:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8049256:	8b 00                	mov    eax,DWORD PTR [eax]
 8049258:	83 ec 08             	sub    esp,0x8
 804925b:	6a 00                	push   0x0
 804925d:	50                   	push   eax
 804925e:	e8 cd fd ff ff       	call   8049030 <setbuf@plt>
 8049263:	83 c4 10             	add    esp,0x10
 8049266:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
 804926c:	8b 00                	mov    eax,DWORD PTR [eax]
 804926e:	83 ec 08             	sub    esp,0x8
 8049271:	6a 00                	push   0x0
 8049273:	50                   	push   eax
 8049274:	e8 b7 fd ff ff       	call   8049030 <setbuf@plt>
 8049279:	83 c4 10             	add    esp,0x10
 804927c:	e8 50 ff ff ff       	call   80491d1 <vuln>
 8049281:	b8 00 00 00 00       	mov    eax,0x0
 8049286:	8d 65 f8             	lea    esp,[ebp-0x8]
 8049289:	59                   	pop    ecx
 804928a:	5b                   	pop    ebx
 804928b:	5d                   	pop    ebp
 804928c:	8d 61 fc             	lea    esp,[ecx-0x4]
 804928f:	c3                   	ret    

08049290 <__x86.get_pc_thunk.ax>:
 8049290:	8b 04 24             	mov    eax,DWORD PTR [esp]
 8049293:	c3                   	ret    
 8049294:	66 90                	xchg   ax,ax
 8049296:	66 90                	xchg   ax,ax
 8049298:	66 90                	xchg   ax,ax
 804929a:	66 90                	xchg   ax,ax
 804929c:	66 90                	xchg   ax,ax
 804929e:	66 90                	xchg   ax,ax

080492a0 <__libc_csu_init>:
 80492a0:	55                   	push   ebp
 80492a1:	e8 5b 00 00 00       	call   8049301 <__x86.get_pc_thunk.bp>
 80492a6:	81 c5 5a 2d 00 00    	add    ebp,0x2d5a
 80492ac:	57                   	push   edi
 80492ad:	56                   	push   esi
 80492ae:	53                   	push   ebx
 80492af:	83 ec 0c             	sub    esp,0xc
 80492b2:	89 eb                	mov    ebx,ebp
 80492b4:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
 80492b8:	e8 43 fd ff ff       	call   8049000 <_init>
 80492bd:	8d 9d 04 ff ff ff    	lea    ebx,[ebp-0xfc]
 80492c3:	8d 85 00 ff ff ff    	lea    eax,[ebp-0x100]
 80492c9:	29 c3                	sub    ebx,eax
 80492cb:	c1 fb 02             	sar    ebx,0x2
 80492ce:	74 25                	je     80492f5 <__libc_csu_init+0x55>
 80492d0:	31 f6                	xor    esi,esi
 80492d2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80492d8:	83 ec 04             	sub    esp,0x4
 80492db:	57                   	push   edi
 80492dc:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80492e0:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
 80492e4:	ff 94 b5 00 ff ff ff 	call   DWORD PTR [ebp+esi*4-0x100]
 80492eb:	83 c6 01             	add    esi,0x1
 80492ee:	83 c4 10             	add    esp,0x10
 80492f1:	39 f3                	cmp    ebx,esi
 80492f3:	75 e3                	jne    80492d8 <__libc_csu_init+0x38>
 80492f5:	83 c4 0c             	add    esp,0xc
 80492f8:	5b                   	pop    ebx
 80492f9:	5e                   	pop    esi
 80492fa:	5f                   	pop    edi
 80492fb:	5d                   	pop    ebp
 80492fc:	c3                   	ret    
 80492fd:	8d 76 00             	lea    esi,[esi+0x0]

08049300 <__libc_csu_fini>:
 8049300:	c3                   	ret    

08049301 <__x86.get_pc_thunk.bp>:
 8049301:	8b 2c 24             	mov    ebp,DWORD PTR [esp]
 8049304:	c3                   	ret    

Disassembly of section .fini:

08049308 <_fini>:
 8049308:	53                   	push   ebx
 8049309:	83 ec 08             	sub    esp,0x8
 804930c:	e8 cf fd ff ff       	call   80490e0 <__x86.get_pc_thunk.bx>
 8049311:	81 c3 ef 2c 00 00    	add    ebx,0x2cef
 8049317:	83 c4 08             	add    esp,0x8
 804931a:	5b                   	pop    ebx
 804931b:	c3                   	ret    

Disassembly of section .rodata:

0804a000 <_fp_hw>:
 804a000:	03 00                	add    eax,DWORD PTR [eax]
	...

0804a004 <_IO_stdin_used>:
 804a004:	01 00                	add    DWORD PTR [eax],eax
 804a006:	02 00                	add    al,BYTE PTR [eax]
 804a008:	2f                   	das    
 804a009:	62 69 6e             	bound  ebp,QWORD PTR [ecx+0x6e]
 804a00c:	2f                   	das    
 804a00d:	73 68                	jae    804a077 <__GNU_EH_FRAME_HDR+0x43>
 804a00f:	00 50 6c             	add    BYTE PTR [eax+0x6c],dl
 804a012:	65 61                	gs popa 
 804a014:	73 65                	jae    804a07b <__GNU_EH_FRAME_HDR+0x47>
 804a016:	20 65 6e             	and    BYTE PTR [ebp+0x6e],ah
 804a019:	74 65                	je     804a080 <__GNU_EH_FRAME_HDR+0x4c>
 804a01b:	72 20                	jb     804a03d <__GNU_EH_FRAME_HDR+0x9>
 804a01d:	79 6f                	jns    804a08e <__GNU_EH_FRAME_HDR+0x5a>
 804a01f:	75 72                	jne    804a093 <__GNU_EH_FRAME_HDR+0x5f>
 804a021:	20 6e 61             	and    BYTE PTR [esi+0x61],ch
 804a024:	6d                   	ins    DWORD PTR es:[edi],dx
 804a025:	65 00 48 65          	add    BYTE PTR gs:[eax+0x65],cl
 804a029:	6c                   	ins    BYTE PTR es:[edi],dx
 804a02a:	6c                   	ins    BYTE PTR es:[edi],dx
 804a02b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804a02c:	20 25 73 21 0a 00    	and    BYTE PTR ds:0xa2173,ah

Disassembly of section .eh_frame_hdr:

0804a034 <__GNU_EH_FRAME_HDR>:
 804a034:	01 1b                	add    DWORD PTR [ebx],ebx
 804a036:	03 3b                	add    edi,DWORD PTR [ebx]
 804a038:	58                   	pop    eax
 804a039:	00 00                	add    BYTE PTR [eax],al
 804a03b:	00 0a                	add    BYTE PTR [edx],cl
 804a03d:	00 00                	add    BYTE PTR [eax],al
 804a03f:	00 ec                	add    ah,ch
 804a041:	ef                   	out    dx,eax
 804a042:	ff                   	(bad)  
 804a043:	ff b4 00 00 00 5c f0 	push   DWORD PTR [eax+eax*1-0xfa40000]
 804a04a:	ff                   	(bad)  
 804a04b:	ff 74 00 00          	push   DWORD PTR [eax+eax*1+0x0]
 804a04f:	00 9c f0 ff ff a0 00 	add    BYTE PTR [eax+esi*8+0xa0ffff],bl
 804a056:	00 00                	add    BYTE PTR [eax],al
 804a058:	72 f1                	jb     804a04b <__GNU_EH_FRAME_HDR+0x17>
 804a05a:	ff                   	(bad)  
 804a05b:	ff                   	(bad)  
 804a05c:	d8 00                	fadd   DWORD PTR [eax]
 804a05e:	00 00                	add    BYTE PTR [eax],al
 804a060:	9d                   	popf   
 804a061:	f1                   	int1   
 804a062:	ff                   	(bad)  
 804a063:	ff                   	(bad)  
 804a064:	fc                   	cld    
 804a065:	00 00                	add    BYTE PTR [eax],al
 804a067:	00 ec                	add    ah,ch
 804a069:	f1                   	int1   
 804a06a:	ff                   	(bad)  
 804a06b:	ff 20                	jmp    DWORD PTR [eax]
 804a06d:	01 00                	add    DWORD PTR [eax],eax
 804a06f:	00 5c f2 ff          	add    BYTE PTR [edx+esi*8-0x1],bl
 804a073:	ff 54 01 00          	call   DWORD PTR [ecx+eax*1+0x0]
 804a077:	00 6c f2 ff          	add    BYTE PTR [edx+esi*8-0x1],ch
 804a07b:	ff 68 01             	jmp    FWORD PTR [eax+0x1]
 804a07e:	00 00                	add    BYTE PTR [eax],al
 804a080:	cc                   	int3   
 804a081:	f2 ff                	repnz (bad) 
 804a083:	ff b4 01 00 00 cd f2 	push   DWORD PTR [ecx+eax*1-0xd330000]
 804a08a:	ff                   	(bad)  
 804a08b:	ff c8                	dec    eax
 804a08d:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .eh_frame:

0804a090 <__FRAME_END__-0x180>:
 804a090:	14 00                	adc    al,0x0
 804a092:	00 00                	add    BYTE PTR [eax],al
 804a094:	00 00                	add    BYTE PTR [eax],al
 804a096:	00 00                	add    BYTE PTR [eax],al
 804a098:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 804a09b:	00 01                	add    BYTE PTR [ecx],al
 804a09d:	7c 08                	jl     804a0a7 <__GNU_EH_FRAME_HDR+0x73>
 804a09f:	01 1b                	add    DWORD PTR [ebx],ebx
 804a0a1:	0c 04                	or     al,0x4
 804a0a3:	04 88                	add    al,0x88
 804a0a5:	01 07                	add    DWORD PTR [edi],eax
 804a0a7:	08 10                	or     BYTE PTR [eax],dl
 804a0a9:	00 00                	add    BYTE PTR [eax],al
 804a0ab:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804a0ae:	00 00                	add    BYTE PTR [eax],al
 804a0b0:	e0 ef                	loopne 804a0a1 <__GNU_EH_FRAME_HDR+0x6d>
 804a0b2:	ff                   	(bad)  
 804a0b3:	ff 37                	push   DWORD PTR [edi]
 804a0b5:	00 00                	add    BYTE PTR [eax],al
 804a0b7:	00 00                	add    BYTE PTR [eax],al
 804a0b9:	00 00                	add    BYTE PTR [eax],al
 804a0bb:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 804a0be:	00 00                	add    BYTE PTR [eax],al
 804a0c0:	00 00                	add    BYTE PTR [eax],al
 804a0c2:	00 00                	add    BYTE PTR [eax],al
 804a0c4:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 804a0c7:	00 01                	add    BYTE PTR [ecx],al
 804a0c9:	7c 08                	jl     804a0d3 <__GNU_EH_FRAME_HDR+0x9f>
 804a0cb:	01 1b                	add    DWORD PTR [ebx],ebx
 804a0cd:	0c 04                	or     al,0x4
 804a0cf:	04 88                	add    al,0x88
 804a0d1:	01 00                	add    DWORD PTR [eax],eax
 804a0d3:	00 10                	add    BYTE PTR [eax],dl
 804a0d5:	00 00                	add    BYTE PTR [eax],al
 804a0d7:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 804a0da:	00 00                	add    BYTE PTR [eax],al
 804a0dc:	f4                   	hlt    
 804a0dd:	ef                   	out    dx,eax
 804a0de:	ff                   	(bad)  
 804a0df:	ff 01                	inc    DWORD PTR [ecx]
 804a0e1:	00 00                	add    BYTE PTR [eax],al
 804a0e3:	00 00                	add    BYTE PTR [eax],al
 804a0e5:	00 00                	add    BYTE PTR [eax],al
 804a0e7:	00 20                	add    BYTE PTR [eax],ah
 804a0e9:	00 00                	add    BYTE PTR [eax],al
 804a0eb:	00 30                	add    BYTE PTR [eax],dh
 804a0ed:	00 00                	add    BYTE PTR [eax],al
 804a0ef:	00 30                	add    BYTE PTR [eax],dh
 804a0f1:	ef                   	out    dx,eax
 804a0f2:	ff                   	(bad)  
 804a0f3:	ff 70 00             	push   DWORD PTR [eax+0x0]
 804a0f6:	00 00                	add    BYTE PTR [eax],al
 804a0f8:	00 0e                	add    BYTE PTR [esi],cl
 804a0fa:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 804a0fd:	0c 4a                	or     al,0x4a
 804a0ff:	0f 0b                	ud2    
 804a101:	74 04                	je     804a107 <__GNU_EH_FRAME_HDR+0xd3>
 804a103:	78 00                	js     804a105 <__GNU_EH_FRAME_HDR+0xd1>
 804a105:	3f                   	aas    
 804a106:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 804a108:	2a 32                	sub    dh,BYTE PTR [edx]
 804a10a:	24 22                	and    al,0x22
 804a10c:	20 00                	and    BYTE PTR [eax],al
 804a10e:	00 00                	add    BYTE PTR [eax],al
 804a110:	54                   	push   esp
 804a111:	00 00                	add    BYTE PTR [eax],al
 804a113:	00 92 f0 ff ff 2b    	add    BYTE PTR [edx+0x2bfffff0],dl
 804a119:	00 00                	add    BYTE PTR [eax],al
 804a11b:	00 00                	add    BYTE PTR [eax],al
 804a11d:	41                   	inc    ecx
 804a11e:	0e                   	push   cs
 804a11f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804a125:	44                   	inc    esp
 804a126:	83 03 63             	add    DWORD PTR [ebx],0x63
 804a129:	c5 c3 0c             	(bad)
 804a12c:	04 04                	add    al,0x4
 804a12e:	00 00                	add    BYTE PTR [eax],al
 804a130:	20 00                	and    BYTE PTR [eax],al
 804a132:	00 00                	add    BYTE PTR [eax],al
 804a134:	78 00                	js     804a136 <__GNU_EH_FRAME_HDR+0x102>
 804a136:	00 00                	add    BYTE PTR [eax],al
 804a138:	99                   	cdq    
 804a139:	f0 ff                	lock (bad) 
 804a13b:	ff 4f 00             	dec    DWORD PTR [edi+0x0]
 804a13e:	00 00                	add    BYTE PTR [eax],al
 804a140:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 804a143:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804a149:	44                   	inc    esp
 804a14a:	83 03 02             	add    DWORD PTR [ebx],0x2
 804a14d:	47                   	inc    edi
 804a14e:	c5 c3 0c             	(bad)
 804a151:	04 04                	add    al,0x4
 804a153:	00 30                	add    BYTE PTR [eax],dh
 804a155:	00 00                	add    BYTE PTR [eax],al
 804a157:	00 9c 00 00 00 c4 f0 	add    BYTE PTR [eax+eax*1-0xf3c0000],bl
 804a15e:	ff                   	(bad)  
 804a15f:	ff 70 00             	push   DWORD PTR [eax+0x0]
 804a162:	00 00                	add    BYTE PTR [eax],al
 804a164:	00 44 0c 01          	add    BYTE PTR [esp+ecx*1+0x1],al
 804a168:	00 49 10             	add    BYTE PTR [ecx+0x10],cl
 804a16b:	05 02 75 00 42       	add    eax,0x42007502
 804a170:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
 804a174:	06                   	push   es
 804a175:	10 03                	adc    BYTE PTR [ebx],al
 804a177:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
 804a17a:	02 5b c1             	add    bl,BYTE PTR [ebx-0x3f]
 804a17d:	0c 01                	or     al,0x1
 804a17f:	00 41 c3             	add    BYTE PTR [ecx-0x3d],al
 804a182:	41                   	inc    ecx
 804a183:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
 804a186:	04 04                	add    al,0x4
 804a188:	10 00                	adc    BYTE PTR [eax],al
 804a18a:	00 00                	add    BYTE PTR [eax],al
 804a18c:	d0 00                	rol    BYTE PTR [eax],1
 804a18e:	00 00                	add    BYTE PTR [eax],al
 804a190:	00 f1                	add    cl,dh
 804a192:	ff                   	(bad)  
 804a193:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
 804a196:	00 00                	add    BYTE PTR [eax],al
 804a198:	00 00                	add    BYTE PTR [eax],al
 804a19a:	00 00                	add    BYTE PTR [eax],al
 804a19c:	48                   	dec    eax
 804a19d:	00 00                	add    BYTE PTR [eax],al
 804a19f:	00 e4                	add    ah,ah
 804a1a1:	00 00                	add    BYTE PTR [eax],al
 804a1a3:	00 fc                	add    ah,bh
 804a1a5:	f0 ff                	lock (bad) 
 804a1a7:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
 804a1aa:	00 00                	add    BYTE PTR [eax],al
 804a1ac:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 804a1af:	08 85 02 4c 0e 0c    	or     BYTE PTR [ebp+0xc0e4c02],al
 804a1b5:	87 03                	xchg   DWORD PTR [ebx],eax
 804a1b7:	41                   	inc    ecx
 804a1b8:	0e                   	push   cs
 804a1b9:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 804a1bf:	83 05 43 0e 20 69 0e 	add    DWORD PTR ds:0x69200e43,0xe
 804a1c6:	24 41                	and    al,0x41
 804a1c8:	0e                   	push   cs
 804a1c9:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
 804a1cd:	44                   	inc    esp
 804a1ce:	0e                   	push   cs
 804a1cf:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
 804a1d2:	20 47 0e             	and    BYTE PTR [edi+0xe],al
 804a1d5:	14 41                	adc    al,0x41
 804a1d7:	c3                   	ret    
 804a1d8:	0e                   	push   cs
 804a1d9:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 804a1dc:	0e                   	push   cs
 804a1dd:	0c 41                	or     al,0x41
 804a1df:	c7                   	(bad)  
 804a1e0:	0e                   	push   cs
 804a1e1:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 804a1e4:	0e                   	push   cs
 804a1e5:	04 00                	add    al,0x0
 804a1e7:	00 10                	add    BYTE PTR [eax],dl
 804a1e9:	00 00                	add    BYTE PTR [eax],al
 804a1eb:	00 30                	add    BYTE PTR [eax],dh
 804a1ed:	01 00                	add    DWORD PTR [eax],eax
 804a1ef:	00 10                	add    BYTE PTR [eax],dl
 804a1f1:	f1                   	int1   
 804a1f2:	ff                   	(bad)  
 804a1f3:	ff 01                	inc    DWORD PTR [ecx]
 804a1f5:	00 00                	add    BYTE PTR [eax],al
 804a1f7:	00 00                	add    BYTE PTR [eax],al
 804a1f9:	00 00                	add    BYTE PTR [eax],al
 804a1fb:	00 10                	add    BYTE PTR [eax],dl
 804a1fd:	00 00                	add    BYTE PTR [eax],al
 804a1ff:	00 44 01 00          	add    BYTE PTR [ecx+eax*1+0x0],al
 804a203:	00 fd                	add    ch,bh
 804a205:	f0 ff                	lock (bad) 
 804a207:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
 804a20a:	00 00                	add    BYTE PTR [eax],al
 804a20c:	00 00                	add    BYTE PTR [eax],al
	...

0804a210 <__FRAME_END__>:
 804a210:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

0804bf00 <__frame_dummy_init_array_entry>:
 804bf00:	a0                   	.byte 0xa0
 804bf01:	91                   	xchg   ecx,eax
 804bf02:	04 08                	add    al,0x8

Disassembly of section .fini_array:

0804bf04 <__do_global_dtors_aux_fini_array_entry>:
 804bf04:	70 91                	jo     804be97 <__FRAME_END__+0x1c87>
 804bf06:	04 08                	add    al,0x8

Disassembly of section .dynamic:

0804bf08 <_DYNAMIC>:
 804bf08:	01 00                	add    DWORD PTR [eax],eax
 804bf0a:	00 00                	add    BYTE PTR [eax],al
 804bf0c:	55                   	push   ebp
 804bf0d:	00 00                	add    BYTE PTR [eax],al
 804bf0f:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 804bf12:	00 00                	add    BYTE PTR [eax],al
 804bf14:	00 90 04 08 0d 00    	add    BYTE PTR [eax+0xd0804],dl
 804bf1a:	00 00                	add    BYTE PTR [eax],al
 804bf1c:	08 93 04 08 19 00    	or     BYTE PTR [ebx+0x190804],dl
 804bf22:	00 00                	add    BYTE PTR [eax],al
 804bf24:	00 bf 04 08 1b 00    	add    BYTE PTR [edi+0x1b0804],bh
 804bf2a:	00 00                	add    BYTE PTR [eax],al
 804bf2c:	04 00                	add    al,0x0
 804bf2e:	00 00                	add    BYTE PTR [eax],al
 804bf30:	1a 00                	sbb    al,BYTE PTR [eax]
 804bf32:	00 00                	add    BYTE PTR [eax],al
 804bf34:	04 bf                	add    al,0xbf
 804bf36:	04 08                	add    al,0x8
 804bf38:	1c 00                	sbb    al,0x0
 804bf3a:	00 00                	add    BYTE PTR [eax],al
 804bf3c:	04 00                	add    al,0x0
 804bf3e:	00 00                	add    BYTE PTR [eax],al
 804bf40:	f5                   	cmc    
 804bf41:	fe                   	(bad)  
 804bf42:	ff 6f ec             	jmp    FWORD PTR [edi-0x14]
 804bf45:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 804bf4c:	cc                   	int3   
 804bf4d:	82 04 08 06          	add    BYTE PTR [eax+ecx*1],0x6
 804bf51:	00 00                	add    BYTE PTR [eax],al
 804bf53:	00 0c 82             	add    BYTE PTR [edx+eax*4],cl
 804bf56:	04 08                	add    al,0x8
 804bf58:	0a 00                	or     al,BYTE PTR [eax]
 804bf5a:	00 00                	add    BYTE PTR [eax],al
 804bf5c:	78 00                	js     804bf5e <_DYNAMIC+0x56>
 804bf5e:	00 00                	add    BYTE PTR [eax],al
 804bf60:	0b 00                	or     eax,DWORD PTR [eax]
 804bf62:	00 00                	add    BYTE PTR [eax],al
 804bf64:	10 00                	adc    BYTE PTR [eax],al
 804bf66:	00 00                	add    BYTE PTR [eax],al
 804bf68:	15 00 00 00 00       	adc    eax,0x0
 804bf6d:	00 00                	add    BYTE PTR [eax],al
 804bf6f:	00 03                	add    BYTE PTR [ebx],al
 804bf71:	00 00                	add    BYTE PTR [eax],al
 804bf73:	00 00                	add    BYTE PTR [eax],al
 804bf75:	c0 04 08 02          	rol    BYTE PTR [eax+ecx*1],0x2
 804bf79:	00 00                	add    BYTE PTR [eax],al
 804bf7b:	00 30                	add    BYTE PTR [eax],dh
 804bf7d:	00 00                	add    BYTE PTR [eax],al
 804bf7f:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 804bf82:	00 00                	add    BYTE PTR [eax],al
 804bf84:	11 00                	adc    DWORD PTR [eax],eax
 804bf86:	00 00                	add    BYTE PTR [eax],al
 804bf88:	17                   	pop    ss
 804bf89:	00 00                	add    BYTE PTR [eax],al
 804bf8b:	00 9c 83 04 08 11 00 	add    BYTE PTR [ebx+eax*4+0x110804],bl
 804bf92:	00 00                	add    BYTE PTR [eax],al
 804bf94:	7c 83                	jl     804bf19 <_DYNAMIC+0x11>
 804bf96:	04 08                	add    al,0x8
 804bf98:	12 00                	adc    al,BYTE PTR [eax]
 804bf9a:	00 00                	add    BYTE PTR [eax],al
 804bf9c:	20 00                	and    BYTE PTR [eax],al
 804bf9e:	00 00                	add    BYTE PTR [eax],al
 804bfa0:	13 00                	adc    eax,DWORD PTR [eax]
 804bfa2:	00 00                	add    BYTE PTR [eax],al
 804bfa4:	08 00                	or     BYTE PTR [eax],al
 804bfa6:	00 00                	add    BYTE PTR [eax],al
 804bfa8:	fe                   	(bad)  
 804bfa9:	ff                   	(bad)  
 804bfaa:	ff 6f 5c             	jmp    FWORD PTR [edi+0x5c]
 804bfad:	83 04 08 ff          	add    DWORD PTR [eax+ecx*1],0xffffffff
 804bfb1:	ff                   	(bad)  
 804bfb2:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 804bfb5:	00 00                	add    BYTE PTR [eax],al
 804bfb7:	00 f0                	add    al,dh
 804bfb9:	ff                   	(bad)  
 804bfba:	ff 6f 44             	jmp    FWORD PTR [edi+0x44]
 804bfbd:	83 04 08 00          	add    DWORD PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

0804bff0 <.got>:
	...

Disassembly of section .got.plt:

0804c000 <_GLOBAL_OFFSET_TABLE_>:
 804c000:	08 bf 04 08 00 00    	or     BYTE PTR [edi+0x804],bh
 804c006:	00 00                	add    BYTE PTR [eax],al
 804c008:	00 00                	add    BYTE PTR [eax],al
 804c00a:	00 00                	add    BYTE PTR [eax],al
 804c00c:	36 90                	ss nop
 804c00e:	04 08                	add    al,0x8
 804c010:	46                   	inc    esi
 804c011:	90                   	nop
 804c012:	04 08                	add    al,0x8
 804c014:	56                   	push   esi
 804c015:	90                   	nop
 804c016:	04 08                	add    al,0x8
 804c018:	66 90                	xchg   ax,ax
 804c01a:	04 08                	add    al,0x8
 804c01c:	76 90                	jbe    804bfae <_DYNAMIC+0xa6>
 804c01e:	04 08                	add    al,0x8
 804c020:	86                   	.byte 0x86
 804c021:	90                   	nop
 804c022:	04 08                	add    al,0x8

Disassembly of section .data:

0804c024 <__data_start>:
 804c024:	00 00                	add    BYTE PTR [eax],al
	...

0804c028 <__dso_handle>:
 804c028:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804c02c <completed.0>:
 804c02c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 44 65 62          	sub    BYTE PTR [ebp+eiz*2+0x62],al
   9:	69 61 6e 20 31 31 2e 	imul   esp,DWORD PTR [ecx+0x6e],0x2e313120
  10:	33 2e                	xor    ebp,DWORD PTR [esi]
  12:	30 2d 33 29 20 31    	xor    BYTE PTR ds:0x31202933,ch
  18:	31 2e                	xor    DWORD PTR [esi],ebp
  1a:	33 2e                	xor    ebp,DWORD PTR [esi]
  1c:	30 00                	xor    BYTE PTR [eax],al
